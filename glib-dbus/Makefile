# Make file to build test glib-dbus service
# Alex Ogurtsov May 2015
#

# packages dependency
pkg_packages := dbus-1 dbus-glib-1

# Install directories
SERVICES_DIR = $(shell pkg-config --variable session_bus_services_dir $(pkg_packages))
INTERFACES_DIR = $(shell pkg-config --variable interfaces_dir $(pkg_packages))
BIN_DIR = /usr/local/bin

# Dependencies build flags
PKG_CFLAGS += $(shell pkg-config --cflags $(pkg_packages))
PKG_LDFLAGS += $(shell pkg-config --libs $(pkg_packages) )
# Any additional comile flags goes here
ADD_CFLAGS := -g -Wall -DG_DISABLE_DEPRECATED
# Build flags combined
CFLAGS  := $(PKG_CFLAGS) $(ADD_CFLAGS) $(CFLAGS)
LDFLAGS := $(PKG_LDFLAGS) $(LDFLAGS)
# Files which describe provided interfaces and service
interface_xml := calc-dbus-interface.xml
service_definition := org.test.Calck.service

# Clean autogenerated files
cleanfiles := calc-client-stub.h \
              calc-server-stub.h
# Binaries to build
targets = test_calc_server test_calc_client

.PHONY:  clean checkxml install

all: $(targets)

test_calc_client: client.o
	$(CC) $^ -o $@ $(LDFLAGS)
test_calc_server: server.o
	$(CC) $^ -o $@ $(LDFLAGS)

client.o: client.c common.h client.h calc-client-stub.h
	$(CC) $(CFLAGS) -DPROGNAME=\"$(basename $@)\" -c $< -o $@
server.o: server.c common.h server.h calc-server-stub.h
	$(CC) $(CFLAGS) -DPROGNAME=\"$(basename $@)\" -c $< -o $@

# Autobuild glib-dbus bindings
calc-server-stub.h: $(interface_xml)
	dbus-binding-tool --prefix=calc --mode=glib-server $< > $@

calc-client-stub.h: $(interface_xml)
	dbus-binding-tool --prefix=calc --mode=glib-client $< > $@

checkxml: $(interface_xml)
	@xmllint -valid -noout $<
	@echo $< checks out ok

clean:
	$(RM) $(targets) $(cleanfiles) *.o

config_install: $(service_definition) $(interface_xml)
	install -m 644 $(service_definition) $(SERVICES_DIR)/
	install -m 644 $(interface_xml) $(INTERFACES_DIR)/

config_uninstall: 
	rm -f $(SERVICES_DIR)/$(service_definition)
	rm -f $(INTERFACES_DIR)/$(interface_xml)

binary_install:
	install -s -m 755 $(targets) $(BIN_DIR)/

binary_unistall:
	cd $(BIN_DIR) && rm -f $(targets)

install: config_install binary_install

uninstall: config_uninstall binary_unistall
# Changing Makefile will cause rebuild
server.o client.o:  Makefile
